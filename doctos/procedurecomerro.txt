(      indrel  :=  1;
      BtnLerArq.Enabled :=  false;
      FileName := Trim(Edarq.Text);
      ExcelApp.Connect;
      Try
        ExcelApp.Workbooks.Open(fileName,EmptyParam,EmptyParam,EmptyParam,EmptyParam,EmptyParam,EmptyParam,EmptyParam,EmptyParam,EmptyParam,EmptyParam,EmptyParam,EmptyParam,EmptyParam,EmptyParam,0);
        WorkBk := ExcelApp.WorkBooks.Item[1];
        WorkSheet := WorkBk.WorkSheets.Get_Item(1) as _WorkSheet;
        WorkSheet.Cells.SpecialCells(xlCellTypeLastCell,EmptyParam).Activate;
        X := ExcelApp.ActiveCell.Row;
        SetLength(linrel,X+3);
        Y := 47;
        RangeMatrix := ExcelApp.Range['A1',ExcelApp.Cells.Item[X,Y]].Value2;
        // RangeMatrix := ExcelApp.Range['A1',
        ExcelApp.Quit;
      Finally
        ShowMessage(FileName);
 //       ExcelApp.Disconnect;
      End;
      K := 2;
      repeat
        for R := 19 to Y do
          begin
            if (R In[19,46,47]) then
              begin
                if (trim(RangeMatrix[K,R]) = '') then
                  begin
                    linrel[indrel]  :=  linrel[indrel]+format('%5.5d',[k])+format('%-5.5s%',[''])+format('%3.3d',[R]);
                    linrel[indrel]  :=  linrel[indrel]+format('%-50.50s%',[trim(RangeMatrix[K,R])])+format('%-30.30s%',['Conteúdo em Branco ou Inválido']);
                    Inc(indrel,1);
                  end;
              end;
          end;
        Inc(K,1);
      until
      K > X;
      //RangeMatrix := Unassigned;
      if (indrel  > 1) then
        begin
          procrel;
          CloseFile(arqrel);
          Application.MessageBox(PChar('Erros: Relatório:'+chr(10)+dirrel),'ADS',ID_OK);
          ExcelApp.Quit;
          Finalize(linrel);
          exit;
        end;
      K := 2;
      try
        repeat
          begin
//            dtrecebe  :=  FormatDateTime('mm/dd/yyyy', StrToDate(RangeMatrix[K,46]));//decodedate(RangeMatrix[K,47],mes,dia,ano);'//
//            dtrecebe  :=  FormatDateTime('mm/dd/yyyy', decodedate(RangeMatrix[K,46],mes,dia,ano));
            Y :=  strtoint(RangeMatrix[K,46]);
            dtrecebe  :=  FormatDateTime('mm/dd/yyyy',StrToDate(FloatToStr(strtoint(RangeMatrix[K,46])/1)));
            Lin001    :=  FloatToStr(strtoint(trim(RangeMatrix[K,46]))/1);
            SqlAux1.Close;
            SqlAux1.SQL.Clear;
            SqlAux1.SQL.Add('update tbsdx02 set ');
            //sdx_dtentrega=:dtentrega,
            SqlAux1.SQL.Add('sdx_nomrecebe=:nomrecebe ');
            SqlAux1.SQL.Add('where (sdx_numobj2=:numobj2) and (sdx_dtbxa is Null)');
            //SqlAux1.ParamByName('dtentrega').AsString :=  FormatDateTime('mm/dd/yyyy', StrToDate(trim(RangeMatrix[K,46])));
            SqlAux1.ParamByName('nomrecebe').AsString :=  trim(RangeMatrix[K,47]);
            SqlAux1.ParamByName('numobj2').AsString   :=  trim(RangeMatrix[K,19]);
            try
              SqlAux1.ExecSQL;
              edTot.Text  :=  IntToStr(StrToInt(edtot.Text)+1);
            except on e:exception do
              begin
                linrel[indrel]  :=  linrel[indrel]+format('%5.5d',[0])+format('%-5.5s%',[''])+format('%3.3d',[0]);
                linrel[indrel]  :=  linrel[indrel]+format('%-50.50s%',[trim(RangeMatrix[K,R])])+format('%-30.30s%',['Erro:'+e.Message]);
                Inc(indrel,1);
              end;
            end;
          end;
          Inc(K,1);
        until
        K > X;
      except on e:exception do
        begin
          linrel[indrel]  :=  linrel[indrel]+format('%5.5d',[0])+format('%-5.5s%',[''])+format('%3.3d',[0]);
          linrel[indrel]  :=  linrel[indrel]+format('%-50.50s%',[trim(RangeMatrix[K,R])])+format('%-30.30s%',['Erro:'+e.Message]);
          Inc(indrel,1);
          BtnLerArq.Enabled :=  true;
        end;
      end;
      if (indrel  > 1) then
        begin
          procrel;
          CloseFile(arqrel);
        end;
    End;
}
